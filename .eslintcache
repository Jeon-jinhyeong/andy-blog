[{"/Users/andyshin/Workspace/andy-blog/src/stories/Button.stories.tsx":"1","/Users/andyshin/Workspace/andy-blog/src/stories/Button.tsx":"2","/Users/andyshin/Workspace/andy-blog/src/index.tsx":"3","/Users/andyshin/Workspace/andy-blog/src/reportWebVitals.ts":"4","/Users/andyshin/Workspace/andy-blog/src/App.tsx":"5","/Users/andyshin/Workspace/andy-blog/src/stories/Header.stories.tsx":"6","/Users/andyshin/Workspace/andy-blog/src/stories/Page.stories.tsx":"7","/Users/andyshin/Workspace/andy-blog/src/stories/Page.tsx":"8","/Users/andyshin/Workspace/andy-blog/src/stories/Header.tsx":"9","/Users/andyshin/Workspace/andy-blog/src/stories/Theme.tsx":"10","/Users/andyshin/Workspace/andy-blog/src/components/Button/Button.tsx":"11","/Users/andyshin/Workspace/andy-blog/src/components/BlogDetail/BlogDetail.tsx":"12","/Users/andyshin/Workspace/andy-blog/src/components/Header/Header.tsx":"13","/Users/andyshin/Workspace/andy-blog/src/components/SideNav/SideNav.tsx":"14","/Users/andyshin/Workspace/andy-blog/src/components/List/List.tsx":"15","/Users/andyshin/Workspace/andy-blog/src/components/Write/Write.tsx":"16","/Users/andyshin/Workspace/andy-blog/src/services/api.tsx":"17","/Users/andyshin/Workspace/andy-blog/src/services/post.service.mock.tsx":"18","/Users/andyshin/Workspace/andy-blog/src/services/comment.service.mock.tsx":"19","/Users/andyshin/Workspace/andy-blog/src/services/async.tsx":"20"},{"size":951,"mtime":1610433769092,"results":"21","hashOfConfig":"22"},{"size":2062,"mtime":1610433920328,"results":"23","hashOfConfig":"22"},{"size":500,"mtime":1610430042748,"results":"24","hashOfConfig":"22"},{"size":425,"mtime":1610430042748,"results":"25","hashOfConfig":"22"},{"size":1612,"mtime":1614064929187,"results":"26","hashOfConfig":"22"},{"size":510,"mtime":1610433323911,"results":"27","hashOfConfig":"22"},{"size":605,"mtime":1610433323919,"results":"28","hashOfConfig":"22"},{"size":2415,"mtime":1610433323917,"results":"29","hashOfConfig":"22"},{"size":1356,"mtime":1610433323914,"results":"30","hashOfConfig":"22"},{"size":845,"mtime":1610354666956,"results":"31","hashOfConfig":"22"},{"size":390,"mtime":1611051956244,"results":"32","hashOfConfig":"22"},{"size":1003,"mtime":1614073352894,"results":"33","hashOfConfig":"22"},{"size":577,"mtime":1611659992623,"results":"34","hashOfConfig":"22"},{"size":3109,"mtime":1614065850679,"results":"35","hashOfConfig":"22"},{"size":2902,"mtime":1614077350834,"results":"36","hashOfConfig":"22"},{"size":198,"mtime":1611658230448,"results":"37","hashOfConfig":"22"},{"size":848,"mtime":1613471709563,"results":"38","hashOfConfig":"22"},{"size":3200,"mtime":1614077570145,"results":"39","hashOfConfig":"22"},{"size":2253,"mtime":1613472857036,"results":"40","hashOfConfig":"22"},{"size":2282,"mtime":1614077259229,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"y4hxlu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},"/Users/andyshin/Workspace/andy-blog/src/stories/Button.stories.tsx",[],["91","92"],"/Users/andyshin/Workspace/andy-blog/src/stories/Button.tsx",["93","94"],"import React from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, ThemeProvider, css, useTheme} from '@emotion/react'\n\nconst baseCss = css`\n  &.storybook-button {\n    font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    font-weight: 700;\n    border: 0;\n    border-radius: 3em;\n    cursor: pointer;\n    display: inline-block;\n    line-height: 1;\n  }\n  &.storybook-button--primary {\n    color: white;\n    background-color: #1ea7fd;\n  }\n  &.storybook-button--secondary {\n    color: #333;\n    background-color: transparent;\n    box-shadow: rgba(0, 0, 0, 0&.15) 0px 0px 0px 1px inset;\n  }\n  &.storybook-button--small {\n    font-size: 12px;\n    padding: 10px 16px;\n  }\n  &.storybook-button--medium {\n    font-size: 14px;\n    padding: 11px 20px;\n  }\n  &.storybook-button--large {\n    font-size: 16px;\n    padding: 12px 24px;\n  }\n\n`\n\nexport interface ButtonProps {\n    /**\n     * Is this the principal call to action on the page?\n     */\n    primary?: boolean;\n    /**\n     * What background color to use\n     */\n    backgroundColor?: string;\n    /**\n     * How large should the button be?\n     */\n    size?: 'small' | 'medium' | 'large';\n    /**\n     * Button contents\n     */\n    label: string;\n    /**\n     * Optional click handler\n     */\n    onClick?: () => void;\n}\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n                           primary = false,\n                           size = 'medium',\n                           backgroundColor,\n                           label,\n                           ...props\n                       }: ButtonProps) => {\n\n\n\n    const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n    return (\n        <button\n            css={[baseCss]}\n            type=\"button\"\n            className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n            style={{backgroundColor}}\n            {...props}\n        >\n            {label}\n        </button>\n    );\n};\n\nButton.defaultProps = {\n    label: 'test'\n};\n",["95","96"],"/Users/andyshin/Workspace/andy-blog/src/index.tsx",[],["97","98"],"/Users/andyshin/Workspace/andy-blog/src/reportWebVitals.ts",[],"/Users/andyshin/Workspace/andy-blog/src/App.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/stories/Header.stories.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/stories/Page.stories.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/stories/Page.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/stories/Header.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/stories/Theme.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/components/Button/Button.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/components/BlogDetail/BlogDetail.tsx",["99"],"import React from 'react';\nimport {useAndy} from \"../../services/api\";\nimport {AndyService, Post, PostService} from \"../../object-model/model\";\nimport {AsyncEffectState, PromiseFn, useAsyncEffect} from \"../../services/async\";\nimport { useParams } from 'react-router-dom'\n\nexport interface BlogDetailProps {\n}\n\nexport const BlogDetail = (props: BlogDetailProps) => {\n    const andy: AndyService = useAndy()\n    const params:any = useParams()\n\n    const asyncEffectState: AsyncEffectState<Post | undefined, Error, PromiseFn<Post | undefined>> = useAsyncEffect(andy.post.getPost, [parseInt(params.postId)], [])\n\n    if (asyncEffectState.state.loading) return <div>Loading...</div>\n    if (asyncEffectState.state.error) return <div>Something went wrong: ${asyncEffectState.state.error.message}</div>\n    if (!asyncEffectState.state.data) return (<div>게시글이 없습니다.</div>)\n\n    return (\n        <div className=\"BlogDetail\">\n            {asyncEffectState.state.data.title}\n        </div>\n    );\n}","/Users/andyshin/Workspace/andy-blog/src/components/Header/Header.tsx",["100"],"import React from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react'\n\nfunction style() {\n    return css `\n         background-color: #297116;\n         color: white;\n         height: 50px;\n         img {\n          height: 100%;\n         }\n     `\n}\n\nexport interface HeaderProps {\n    imageUrl?: string\n}\n\nexport const Header = (props: HeaderProps) => {\n    return (\n        <div className=\"Header\"\n             css={style()}>\n            {props.imageUrl && <img src={props.imageUrl} />}\n        </div>\n    );\n}\n\nHeader.defaultProps = {}","/Users/andyshin/Workspace/andy-blog/src/components/SideNav/SideNav.tsx",["101","102","103","104"],"import React, {useEffect, useState} from 'react';\n\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx, css} from '@emotion/react'\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    Link\n} from \"react-router-dom\";\n\nfunction style() {\n    return css`\n      display: flex;\n      justify-content: flex-start;\n      height: 100%;\n      #sideNav {\n          width: 20%;\n          height: 100%;\n          background-color: #1a506d;\n          color: #ffffff;\n          .sideNavMenu {\n            cursor: pointer;\n            margin-top: 20px;\n            font-weight: bold;\n            font-size: 16px;\n          }\n      }\n      #content {\n          width: 80%;\n          height: 100%;\n          .main-content {\n            padding-top: 20px;\n          }\n      }\n    `\n}\n\nexport interface Menu {\n    path: string,\n    exact?: boolean,\n    label: string,\n    component: () => JSX.Element\n    hidden?: boolean,\n}\n\nexport interface SideNavProps {\n    menus: Menu[]\n    children?: JSX.Element[] | JSX.Element\n}\n\nconst pubUrl = process.env.PUBLIC_URL;\n\nexport const SideNav = (props: SideNavProps) => {\n    const [selectedMenuIndex, setSelectedMenuIndex] = useState(0);\n    // let selectedMenuIndex = 0\n\n    // useEffect(() => {\n    // }, [selectedMenuIndex])\n\n\n    return (\n        <Router>\n            <div className=\"SideNav\"\n                 css={style()}>\n                <div id={\"sideNav\"}>\n                    <img src={\"https://noticon-static.tammolo.com/dgggcrkxq/image/upload/v1603679690/noticon/g16oddfpbk4wci2ec7nr.gif\"}></img>\n                    {\n                        props.menus.map((menu: Menu, idx: number) => {\n                            if (menu.hidden) return null;\n                            else return <div key={idx}\n                                             className={\"sideNavMenu\"}>\n                                <Link to={pubUrl + menu.path}>{menu.label}</Link>\n                            </div>\n                        })\n                    }\n                </div>\n                <div id={\"content\"}>\n                    {props.children}\n                    <Switch>\n                        <Route exact path={[\"/\", pubUrl]}>\n                            <Redirect to={pubUrl + props.menus[0].path} />\n                        </Route>\n                        <Route exact path=\"/andy-blog\">\n                            <Redirect to={pubUrl + props.menus[0].path} />\n                        </Route>\n                        {props.menus.map((route, index) => (\n                            // Render more <Route>s with the same paths as\n                            // above, but different components this time.\n                            <Route\n                                key={index}\n                                path={pubUrl + route.path}\n                                exact={route.exact}\n                                children={<route.component />}\n                            />\n                        ))}\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nSideNav.defaultProps = {}","/Users/andyshin/Workspace/andy-blog/src/components/List/List.tsx",["105","106"],"/Users/andyshin/Workspace/andy-blog/src/components/Write/Write.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/services/api.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/services/post.service.mock.tsx",[],"/Users/andyshin/Workspace/andy-blog/src/services/comment.service.mock.tsx",["107","108"],"import {Comment, Post} from \"../object-model/model\";\n\nconst comments: Comment[] = [\n    {\n        id: 1,\n        content: \"댓글 1 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 2,\n        content: \"댓글 2 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 3,\n        content: \"댓글 3 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 4,\n        content: \"댓글 4 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 5,\n        content: \"댓글 5 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 6,\n        content: \"댓글 6 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 7,\n        content: \"댓글 7 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n    , {\n        id: 8,\n        content: \"댓글 8 내용\",\n        createdBy: \"Andy the 투명 드래곤\",\n        createdAt: \"2021-02-16 00:00:00\",\n        updatedAt: \"2021-02-16 00:00:00\",\n    }\n];\n\n\nexport const CommentServiceMock = {\n    getComments: () => {\n        return Promise.resolve(comments)\n    },\n    getComment: (id: number) => {\n        const foundComment: Comment | undefined = comments.find((comment: Comment) => {\n            return comment.id == id\n        })\n        return Promise.resolve(foundComment)\n    },\n    writeComment: (comment: Comment) => {\n        return Promise.resolve(1);\n    },\n    updateComment: (id: number, comment: Comment) => {\n        return Promise.resolve(1);\n    },\n    deleteComment: (id: number) => {\n        return Promise.resolve(1);\n    }\n}","/Users/andyshin/Workspace/andy-blog/src/services/async.tsx",["109"],"import {useReducer, useEffect} from 'react';\n\ntype LoadingAction = {\n    type: 'LOADING';\n};\n\ntype SuccessAction<T> = {\n    type: 'SUCCESS';\n    data: T;\n};\n\ntype ErrorAction<T> = {\n    type: 'ERROR';\n    error: T;\n};\n\ntype AsyncAction<D, E> = LoadingAction | SuccessAction<D> | ErrorAction<E>;\n\nexport type AsyncState<D, E> = {\n    loading: boolean;\n    data: D | null;\n    error: E | null;\n};\n\nexport type AsyncEffectState<D, E, F> = {\n    state: AsyncState<D, E>;\n    run: (...params: any) => void;\n};\n\nfunction asyncReducer<D, E>(\n    state: AsyncState<D, E>,\n    action: AsyncAction<D, E>\n): AsyncState<D, E> {\n    switch (action.type) {\n        case 'LOADING':\n            return {\n                loading: true,\n                data: null,\n                error: null\n            };\n        case 'SUCCESS':\n            return {\n                loading: false,\n                data: action.data,\n                error: null\n            };\n        case 'ERROR':\n            return {\n                loading: false,\n                data: null,\n                error: action.error\n            };\n    }\n}\n\nexport type PromiseFn<T> = (...args: any) => Promise<T>;\n\n\nfunction useAsync<D, E, F extends PromiseFn<D>>(promiseFn: F, deps = []) {\n    const [state, dispatch] = useReducer(asyncReducer, {\n        loading: false,\n        data: null,\n        error: null\n    } as AsyncState<D, E>);\n\n    async function run(...params: Parameters<F>) {\n        dispatch({type: 'LOADING'});\n        try {\n            const data = await promiseFn(...params);\n            dispatch({\n                type: 'SUCCESS',\n                data\n            });\n        } catch (e) {\n            dispatch({\n                type: 'ERROR',\n                error: e\n            });\n        }\n    }\n\n\n    return [state, run] as const;\n}\n\nfunction useAsyncEffect<D, E, F extends PromiseFn<D>>(\n    promiseFn: F,\n    params: Parameters<F>,\n    deps: any[]\n) {\n    const [state, run] = useAsync<D, E, F>(promiseFn);\n    useEffect(\n        () => {\n            run(...params);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        deps\n    );\n\n    return {\n        state: state,\n        run: run\n    } as AsyncEffectState<D, E, F>;\n}\n\nexport default useAsync;\nexport {useAsyncEffect};",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":14,"nodeType":"116","messageId":"117","endLine":5,"endColumn":27},{"ruleId":"114","severity":1,"message":"118","line":5,"column":34,"nodeType":"116","messageId":"117","endLine":5,"endColumn":42},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},{"ruleId":"114","severity":1,"message":"123","line":3,"column":28,"nodeType":"116","messageId":"117","endLine":3,"endColumn":39},{"ruleId":"124","severity":1,"message":"125","line":26,"column":32,"nodeType":"126","endLine":26,"endColumn":60},{"ruleId":"114","severity":1,"message":"127","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"128","line":58,"column":12,"nodeType":"116","messageId":"117","endLine":58,"endColumn":29},{"ruleId":"114","severity":1,"message":"129","line":58,"column":31,"nodeType":"116","messageId":"117","endLine":58,"endColumn":51},{"ruleId":"124","severity":1,"message":"125","line":70,"column":21,"nodeType":"126","endLine":70,"endColumn":137},{"ruleId":"114","severity":1,"message":"130","line":10,"column":27,"nodeType":"116","messageId":"117","endLine":10,"endColumn":37},{"ruleId":"114","severity":1,"message":"131","line":57,"column":14,"nodeType":"116","messageId":"117","endLine":57,"endColumn":24},{"ruleId":"114","severity":1,"message":"132","line":1,"column":18,"nodeType":"116","messageId":"117","endLine":1,"endColumn":22},{"ruleId":"133","severity":1,"message":"134","line":69,"column":31,"nodeType":"135","messageId":"136","endLine":69,"endColumn":33},{"ruleId":"114","severity":1,"message":"137","line":25,"column":36,"nodeType":"116","messageId":"117","endLine":25,"endColumn":37},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.",["138"],["139"],["138"],["139"],"'PostService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'selectedMenuIndex' is assigned a value but never used.","'setSelectedMenuIndex' is assigned a value but never used.","'AsyncState' is defined but never used.","'updatePost' is defined but never used.","'Post' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'F' is defined but never used.","no-global-assign","no-unsafe-negation"]